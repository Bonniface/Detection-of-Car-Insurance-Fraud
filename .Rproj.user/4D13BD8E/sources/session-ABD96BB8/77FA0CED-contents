# Detection-of-Car-Insurance-Fraud
 Conspiring to create fraudulent or inflated claims about property damage or personal injuries as a result of an accident is known as vehicle insurance fraud. The use of phantom passengers—people who were not even present at the accident scene claim to have sustained severe injuries—staged accidents, where fraudsters purposefully "arrange" for accidents to occur, and false personal injury claims—where personal injuries are grossly exaggerated—are a few frequent examples.
 
 # About this dataset
Together with policy information such as policy type, tenure, and vehicle datasets (attribute, model, accident details, etc.), this dataset also includes vehicle data. The goal is to determine whether or not a claim application is fraudulent - FraudFound P


# Data Dictionary (at first glance)
Results of printing the unique values from each feature. Things I noticed about each feature.

Month - object
contains 3 letter abbreviations for the months of the year
Are these the months in which the accident occured?
WeekOfMonth - int64
provides the week in the month the accident occured?
DayOfWeek - object
contains days of the week - are these the days of the week the accident occured on?
Make - object
contains a list of 19 car manufacturers
AccidentArea - object
classifies area for accident as "Urban" or "Rural"
DayOfWeekClaimed - object
contains the day of the week the claim was filed
also contains '0' - need to check how many of these there are and see about "fixing" - missing data?
MonthClaimed - object
contains 3 letter abbreviations for the months of the year
contains '0' - need to check how many there are and what they mean - missing data?
WeekOfMonthClaimed - int64
contains weeks in the month that the claimed in filed
Sex - object
gender of individual making claim?
binary data, convert to 1 or 0
MaritalStatus - object
marital status of individual making claim?
Age - int64
ages of individual making claim?
there is at least one individual with age 0 - missing data?
Fault - object
categorization of who was deemed at fault.
convert to binary, 1 or 0
PolicyType - object
contains two pieces of info -
the type of insurance on the car - liability, all perils, collision
category of the vehicle - sport, sedan, utility
VehicleCategory - object
contains the categorization of the vehicle (see PolicyType)
VehiclePrice - object
contains ranges for the value of the vehicle
replace ranges with mean value of range and convert to float
FraudFound_P - int64
indicats whether the claim was fraudulant (1) or not (0)
this is what we want to predict
PolicyNumber - int64
the masked policy number, appears to be the same as row number minus 1
RepNumber - int64
rep number is integer from 1 - 16
Deductible - int64
the deductible amount
integer values
DriverRating - int64
the scale is 1, 2, 3, 4
the name DriverRating implies the data is ordinal, but is it interval as well?
Days_Policy_Accident - object
as a guess, this is the number of days between when the policy was purchased and the accident occured
each value is again a range of values
change these to be mean of the range and make float
Days_Policy_Claim - object
another guess, this is the number of days that pass between the policy was purchased and the claim was filed
each value is a range
change these to be the mean of the ranges and make float
PastNumberOfClaims - object
previous number of claims filed by policy holder (or claimant?)
AgeOfVehicle - object
represents age of vehicle at time of the accident?
each value is a range of years
change these to be the mean of the ranges and make float
AgeOfPolicyHolder - object
each value is a range of ages"
change these to be the mean of the ranges and make float
PoliceReportFiled - object
indicates whether a police report was filed for the accident
convert to binary
WitnessPresent - object
indicted whether a witness was present
conver to binary
AgentType - object
this classifies an agent who is handling the claim as internal vs external
what does this mean?
change to binary
NumberOfSuppliments - object
probably not the number of vitamins taken daily
not sure what a suppliment is in insurance
AddressChange_Claim - object
guess, time from claim was filled to when person moved (i.e. filed an address change)
replace each interval with mean value of range
NumberOfCars - object
guess, number of cars involved in accident OR number of cars covered under policy
replace each interval with mean value of range
Year - int64
guess, year accident occured
BasePolicy - object
type of insurance coverage (see PolicyType)
Issues in data to investigate first
DayOfWeekClaimed - contains a 0 instead of a day of the week
MonthClaimed - contains a 0 instead of the month
Age - contains a 0 instead of the necessary age
PolicyType - appears to be a concatenation of VehicleCategory and BasePolicy
PolicyNumber - determine if they are the same as the row number minus 1
Thoughts/questions to look into
Are representatives fixed to a specific geographic region?
i.e. will rep 1 always be rural vs urban?
Are they fixed as always being internal or external?
i.e. would rep 1 always be considered internal vs external?
Should 'Age' always fall in the range of 'AgeOfPolicyHolder'?
PolicyType appears to contain the same information as VehicleCategroy and BasePolicy
Should they match? Do they always match?
Can we eliminate one or two of these features?
Is a driver rated as 1 better or worse of a driver rated as a 4? Or is it a measure of Risk? Meaning a driver rated at 1 is at a higher risk of an accident than driver rated at 4?
Are certain Months/Days of the week more prone to accidents than others?